{"version":3,"sources":["components/main.js","components/ticket.js","App.js","reportWebVitals.js","index.js"],"names":["wins","App","useState","list","setList","isWating","setIsWating","spinner","setSpiner","history","useHistory","useEffect","length","localStorage","setItem","JSON","stringify","stoaredList","parse","getItem","Board","tempList","row","i","push","className","style","backgroundColor","includes","fontSize","color","margin","width","borderLeft","borderRight","height","border","Button","variant","onClick","removeItem","size","intervalId","setInterval","number","Math","floor","random","flag","setTimeout","clearInterval","Spinner","animation","class","map","label","FormCheck","textAlign","React","memo","Ticket","ticket","setTicket","Card","card","index","id","marginLeft","padding","background","_entries","col","display","justifyContent","alignItems","html2canvas","document","getElementById","then","canvas","dataURL","toDataURL","link","createElement","download","href","click","capture","placeholder","onChange","e","target","value","type","tickets","tamblo","generateTickets","parseInt","overflow","path","component","Main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5d72d4a2.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Spinner, FormCheck } from \"react-bootstrap\";\nimport { useHistory } from 'react-router-dom';\nconst wins = [\n  \"Fast Five\",\n  \"First Row\",\n  \"Middle Row\",\n  \"Last Row\",\n  \"Four Corners\",\n  \"Bingo...\"\n]\nfunction App() {\n  const [list, setList] = useState([]);\n  const [isWating, setIsWating] = useState(false);\n  const [spinner, setSpiner] = useState(1);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (list.length) localStorage.setItem(\"numbers\", JSON.stringify(list))\n  }, [list])\n\n  useEffect(() => {\n    let stoaredList = JSON.parse(localStorage.getItem(\"numbers\"))\n    if (stoaredList) setList(stoaredList)\n  }, [])\n\n  const handleOnReset = () => {\n    setList([])\n    localStorage.removeItem(\"numbers\")\n  }\n\n  const handleOnClick = () => {\n    if (list.length < 90) {\n      let intervalId = setInterval(() => {\n        let number = Math.floor(Math.random() * (91 - 1) + 1)\n        setSpiner(number)\n      }, 50)\n      let flag = true;\n      while (flag) {\n        let number = Math.floor(Math.random() * (91 - 1) + 1)\n        if (!list.includes(number)) {\n          setIsWating(true)\n          flag = false\n          setTimeout(() => {\n            clearInterval(intervalId)\n            setList([...list, number])\n            setIsWating(false)\n          }, 1000)\n        }\n      }\n    }\n  }\n\n  const Board = () => {\n    let tempList = []\n    let row = []\n    for (let i = 1; i <= 90; i++) {\n\n      row.push(<div\n        className=\"col border border-primary rounded-pill mx-2 my-2\"\n        style={{ backgroundColor: list.includes(i) ? \"#f5cf9f\" : \"\" }}>\n        <span style={{ fontSize: \"25px\", color: !list.includes(i) ? \"#c1bbbb\" : \"\" }}><b>{i}</b></span>\n      </div>)\n\n      if (i % 10 == 0) {\n        tempList.push(<div className=\"row\" style={{ margin: \"0px\", width: \"90px\", borderLeft: \"1px solid\", borderRight: \"1px solid\" }}>{row}</div>)\n        row = []\n      }\n    }\n    return tempList;\n  }\n\n  return (\n    <div className=\"row\" style={{ height: \"100vh\", border: \"2px solid\" }}>\n      <div className=\"col-3 d-flex align-items-center flex-column pt-3\" style={{ backgroundColor: \"#edf5fe\" }}>\n        <div className=\"d-flex justify-content-center\">\n          <Button variant=\"info\" onClick={handleOnReset} size=\"sm\">\n            Reset\n          </Button>\n          <Button className=\"ml-3\" variant=\"secondary\" onClick={() => history.push(\"/tickets\")} size=\"sm\">\n            generate tickets\n          </Button>\n        </div>\n        <div style={{ fontSize: \"20px\" }} className=\"pt-2\">Previous</div>\n        <div style={{ width: \"100px\", height: \"100px\" }} className=\"d-flex align-items-center justify-content-center border border-secondary rounded-circle mb-1\" >\n          {list.length !== 0 &&\n            <span style={{ fontSize: \"60px\", color: \"grey\" }}>\n              {list[list.length - 2]}\n            </span>\n          }\n        </div>\n        <div style={{ width: \"200px\", height: \"200px\" }} className=\"d-flex align-items-center justify-content-center border border-dark rounded-circle\" >\n          {isWating ?\n            <span style={{ fontSize: \"135px\", color: \"grey\" }}>\n              {spinner}\n            </span> :\n            list.length ?\n              <span style={{ fontSize: list.length != 0 ? \"135px\" : \"50px\" }}>\n                {list[list.length - 1]}\n              </span> :\n              <h2>Start With Spin &#x21e9;</h2>\n          }\n        </div>\n        <Button className=\"mt-3\" variant=\"outline-primary\" onClick={handleOnClick}>\n          {isWating ?\n            <Spinner animation=\"border\" variant=\"info\" /> :\n            <>Spin &#x27F3;</>\n          }\n        </Button>\n        <div class=\"d-flex flex-wrap mt-2 mx-4\">\n          {wins.map(label => <FormCheck style={{ width: \"120px\", textAlign: \"left\" }} className=\"p-2\" label={label} />)}\n        </div>\n      </div>\n      <div className=\"col pt-2\" style={{ height: \"100%\", backgroundColor: \"#eef0d6\", borderLeft: \"1px solid\" }}>\n        <div>\n          <h1><b>Good Luck...!</b></h1>\n          <div class=\"d-flex mx-5 mb-5\">\n            <Board />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Spinner, Container, FormControl, FormCheck } from \"react-bootstrap\";\nimport tamblo from \"tambola-generator\"\nimport html2canvas from 'html2canvas'\nimport { jsPDF } from \"jspdf\";\nimport { useHistory } from 'react-router-dom';\n\nfunction Ticket() {\n    const [list, setList] = useState([]);\n    const [ticket, setTicket] = useState(0);\n    const history = useHistory()\n    const handelSubmit = () => {\n        let tickets = tamblo.generateTickets(parseInt(ticket))\n        setList(tickets)\n    }\n\n    const capture = (index) => {\n        html2canvas(document.getElementById(`${index}`)).then(canvas => {\n            let dataURL = canvas.toDataURL('image/png');\n            var link = document.createElement('a');\n            link.download = `${index}.png`;\n            link.href = dataURL;\n            link.click();\n        });\n    }\n\n    const Card = ({ card, index }) => {\n        return <div className=\"mb-4\">\n            <div id={index + 1} style={{ marginLeft: \"20px\", padding: \"30px\", background: \"#fff\" }} className=\"border border-success\" >\n                {card._entries.map(row =>\n                    <div class=\"row \">\n                        {row.map(col => <div class=\"col border border-dark\" style={{ width: \"40px\", height: \"40px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", fontSize: \"20px\" }}>{col || \" \"}</div>)}\n                    </div>)\n                }\n                <span> ticket : {index + 1}</span>\n            </div>\n            <Button onClick={() => capture(index + 1)} className=\"mt-1\" variant=\"dark\">save</Button>\n        </div>\n    }\n    return (\n        <>\n            {!list.length ?\n                <div className=\"row\" style={{ height: \"100vh\", background: \"#cccbab\", width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <div>\n                        <div>\n                            <input style={{ padding: \"10px\" }} placeholder=\"input required tickets\" onChange={(e) => setTicket(e.target.value)} type=\"number\" />\n                        </div>\n                        <div className=\"mt-5\">\n                            <Button onClick={handelSubmit} variant=\"success\">Generate Tickets</Button>\n                        </div>\n                    </div>\n                </div> :\n                <div style={{ background: \"#cccbab\" }}>\n                    <Button onClick={() => history.push(\"/\")} size=\"sm\" variant=\"success\" className=\"mb-2\">Home</Button>\n                    <div className=\"row\" >\n                        {list.map((ticket, index) => <Card card={ticket} index={index} />)}\n                    </div>\n                </div>\n\n            }\n        </>\n    );\n}\n\nexport default React.memo(Ticket);\n","import './App.css';\nimport React from \"react\";\nimport Main from \"./components/main\";\nimport Ticket from \"./components/ticket\";\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ overflow: \"hidden\" }}>\n      <Switch>\n        <Route path='/tickets' component={Ticket} />\n        <Route path='/' component={Main} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter} from 'react-router-dom';\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}