{"version":3,"sources":["components/main.js","App.js","reportWebVitals.js","index.js"],"names":["App","useState","list","setList","isWating","setIsWating","spinner","setSpiner","search","setSearch","className","style","height","border","backgroundColor","FormControl","type","placeholder","onChange","e","parseInt","target","value","includes","fontSize","width","length","color","Button","variant","onClick","intervalId","setInterval","number","Math","floor","random","flag","setTimeout","clearInterval","size","Spinner","animation","overflow","borderLeft","Container","class","map","index","React","memo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.942058c4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Spinner, Container, FormControl } from \"react-bootstrap\";\nfunction App() {\n  const [list, setList] = useState([]);\n  const [isWating, setIsWating] = useState(false);\n  const [spinner, setSpiner] = useState(1);\n  const [search, setSearch] = useState(0);\n\n  const handleOnClick = () => {\n    let intervalId = setInterval(() => {\n      let number = Math.floor(Math.random() * (100 - 1) + 1)\n      setSpiner(number)\n    }, 50)\n    let flag = true;\n    while (flag && list.length !== 99) {\n      let number = Math.floor(Math.random() * (100 - 1) + 1)\n      if (!list.includes(number)) {\n        setIsWating(true)\n        flag = false\n        setTimeout(() => {\n          clearInterval(intervalId)\n          setList([...list, number])\n          setIsWating(false)\n        }, 1000)\n      }\n    }\n  }\n\n  const handleSearch = (e) => {\n    setSearch(parseInt(e.target.value))\n    debugger\n  }\n\n  return (\n    <div className=\"row\" style={{ height: \"100vh\", border: \"2px solid\" }}>\n      <div className=\"col-4 d-flex align-items-center flex-column pt-3\" style={{ backgroundColor: \"#edf5fe\" }}>\n        <div className=\"d-flex align-items-center\">\n          <FormControl type=\"number\" placeholder=\"Check number in list\" onChange={handleSearch} />\n          <span className=\"ml-2\">{search ? list.includes(search) ? <>&#x2714;</> : <>&#x2716;</> : \"\"}</span>\n        </div>\n        <div style={{ fontSize: \"20px\" }} className=\"pt-2\">Previous</div>\n        <div style={{ width: \"120px\", height: \"120px\" }} className=\"d-flex align-items-center justify-content-center border border-secondary rounded-circle mb-1\" >\n          {list.length !== 0 &&\n            <span style={{ fontSize: \"70px\", color: \"grey\" }}>\n              {list[list.length - 2]}\n            </span>\n          }\n        </div>\n        <div style={{ width: \"220px\", height: \"220px\" }} className=\"d-flex align-items-center justify-content-center border border-dark rounded-circle\" >\n          {isWating ?\n            <span style={{ fontSize: \"150px\", color: \"grey\" }}>\n              {spinner}\n            </span> :\n            list.length ?\n              <span style={{ fontSize: list.length ? \"150px\" : \"50px\" }}>\n                {list[list.length - 1]}\n              </span> :\n              <h1>Start With Spin &#x21e9;</h1>\n          }\n        </div>\n        <Button className=\"mt-3\" variant=\"outline-primary\" onClick={handleOnClick} size=\"lg\">\n          {isWating ?\n            <Spinner animation=\"border\" variant=\"info\" /> :\n            <>Spin &#x27F3;</>\n          }\n        </Button>\n\n        <Button className=\"mt-5\" variant=\"secondary\" onClick={() => setList([])} size=\"sm\">\n          Reset\n        </Button>\n      </div>\n      <div className=\"col pt-2\" style={{ overflow: \"auto\", height: \"100%\", backgroundColor: \"#eef0d6\", borderLeft: \"1px solid\" }}>\n        <Container>\n          {list.length != 0 ?\n            <div class=\"d-flex flex-wrap\">\n              {list.map((number, index) => <div className=\"d-flex align-items-center justify-content-between border border-primary rounded-pill mx-2 my-2 px-3 pt-1\" style={{ width: \"100px\", backgroundColor: list.length == index + 1 ? \"#f5cf9f\" : number == search ? \"#7ff383\" : \"\" }}>\n                <h6 style={{ color: \"grey\" }}>{index + 1}</h6>\n                <h3 className=\"ml-2\">{number}</h3>\n              </div>)}\n            </div> :\n            <div className=\"mt-5\">\n              <h1>Good Luck....!!!!</h1>\n            </div>\n          }\n        </Container>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","import './App.css';\nimport React from \"react\";\nimport Main from \"./components/main\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{overflow:\"hidden\"}}>\n      <Main/>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}