{"version":3,"sources":["components/main.js","App.js","reportWebVitals.js","index.js"],"names":["App","useState","list","setList","isWating","setIsWating","spinner","setSpiner","search","view","setView","useEffect","length","localStorage","setItem","JSON","stringify","stoaredList","parse","getItem","Sequence","tempList","i","push","className","style","width","height","backgroundColor","color","fontSize","Board","includes","border","Button","variant","onClick","removeItem","size","intervalId","setInterval","number","Math","floor","random","flag","setTimeout","clearInterval","Spinner","animation","overflow","borderLeft","class","React","memo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc33878a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Spinner, Container, FormControl } from \"react-bootstrap\";\nfunction App() {\n  const [list, setList] = useState([]);\n  const [isWating, setIsWating] = useState(false);\n  const [spinner, setSpiner] = useState(1);\n  const [search, setSearch] = useState(0);\n  const [view, setView] = useState(true)\n\n  useEffect(() => {\n    if (list.length) localStorage.setItem(\"numbers\", JSON.stringify(list))\n  }, [list])\n\n  useEffect(() => {\n    let stoaredList = JSON.parse(localStorage.getItem(\"numbers\"))\n    if (stoaredList) setList(stoaredList)\n  }, [])\n\n  const handleOnReset = () => {\n    setList([])\n    localStorage.removeItem(\"numbers\")\n  }\n\n  const handleOnClick = () => {\n    let intervalId = setInterval(() => {\n      let number = Math.floor(Math.random() * (90 - 1) + 1)\n      setSpiner(number)\n    }, 50)\n    let flag = true;\n    while (flag && list.length !== 90) {\n      let number = Math.floor(Math.random() * (90 - 1) + 1)\n      if (!list.includes(number)) {\n        setIsWating(true)\n        flag = false\n        setTimeout(() => {\n          clearInterval(intervalId)\n          setList([...list, number])\n          setIsWating(false)\n        }, 1000)\n      }\n    }\n  }\n\n  const handleSearch = (e) => {\n    setSearch(parseInt(e.target.value))\n  }\n\n  const Sequence = () => {\n    let tempList = []\n    for (let i = 0; i <= 89; i++) {\n      tempList.push(<div\n        className=\"d-flex align-items-center justify-content-between border border-primary rounded-pill mx-2 my-2 px-3 \"\n        style={{ width: \"90px\", height: \"45px\", backgroundColor: list.length == i + 1 ? \"#f5cf9f\" : list[i] == search ? \"#7ff383\" : \"\" }}>\n        <h6 className=\"pt-1\" style={{ color: \"grey\" }}>{i + 1}</h6>\n        <span className=\"ml-2 \" style={{ fontSize: \"25px\" }}><b>{list[i] && list[i]}</b></span>\n      </div>)\n    }\n    return tempList;\n  }\n\n  const Board = () => {\n    let tempList = []\n    for (let i = 0; i <= 89; i++) {\n      tempList.push(<div\n        className=\"d-flex align-items-center justify-content-between border border-primary rounded-pill mx-2 my-2 px-3 \"\n        style={{ width: \"90px\", height: \"45px\", backgroundColor: list.includes(i) ? \"#f5cf9f\" : list[i] == search ? \"#7ff383\" : \"\" }}>\n        <span className=\"pl-3 \" style={{ fontSize: \"25px\", color: !list.includes(i) ? \"grey\" : \"\" }}><b>{i}</b></span>\n      </div>)\n    }\n    return tempList;\n  }\n\n  return (\n    <div className=\"row\" style={{ height: \"100vh\", border: \"2px solid\" }}>\n      <div className=\"col-3 d-flex align-items-center flex-column pt-3\" style={{ backgroundColor: \"#edf5fe\" }}>\n        <div className=\"d-flex justify-content-center\">\n          {/* <FormControl type=\"number\" placeholder=\"Check number in list\" onChange={handleSearch} />\n          <span className=\"ml-2\" style={{ fontSize: \"20px\", color: list.includes(search) ? \"green\" : \"red\" }}>\n            {search ? list.includes(search) ? <>&#x2714;</> : <>&#x2716;</> : \"\"}\n          </span> */}\n          <Button variant=\"secondary\" onClick={handleOnReset} size=\"sm\">\n            Reset\n        </Button>\n          <Button className=\"ml-3\" variant=\"success\" onClick={() => setView(!view)} size=\"sm\">\n            Change View\n        </Button>\n        </div>\n        <div style={{ fontSize: \"20px\" }} className=\"pt-2\">Previous</div>\n        <div style={{ width: \"100px\", height: \"100px\" }} className=\"d-flex align-items-center justify-content-center border border-secondary rounded-circle mb-1\" >\n          {list.length !== 0 &&\n            <span style={{ fontSize: \"60px\", color: \"grey\" }}>\n              {list[list.length - 2]}\n            </span>\n          }\n        </div>\n        <div style={{ width: \"200px\", height: \"200px\" }} className=\"d-flex align-items-center justify-content-center border border-dark rounded-circle\" >\n          {isWating ?\n            <span style={{ fontSize: \"135px\", color: \"grey\" }}>\n              {spinner}\n            </span> :\n            list.length ?\n              <span style={{ fontSize: list.length ? \"135px\" : \"45px\" }}>\n                {list[list.length - 1]}\n              </span> :\n              <h1>Start With Spin &#x21e9;</h1>\n          }\n        </div>\n        <Button className=\"mt-3\" variant=\"outline-primary\" onClick={handleOnClick}>\n          {isWating ?\n            <Spinner animation=\"border\" variant=\"info\" /> :\n            <>Spin &#x27F3;</>\n          }\n        </Button>\n      </div>\n      <div className=\"col pt-2\" style={{ overflow: \"auto\", height: \"100%\", backgroundColor: \"#eef0d6\", borderLeft: \"1px solid\" }}>\n        <div>\n          <div class=\"d-flex flex-wrap\">\n            {view ? <Sequence /> : <Board />}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","import './App.css';\nimport React from \"react\";\nimport Main from \"./components/main\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{overflow:\"hidden\"}}>\n      <Main/>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}