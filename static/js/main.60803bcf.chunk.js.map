{"version":3,"sources":["assets/spin.mp3","components/main.js","components/ticket.js","App.js","reportWebVitals.js","index.js"],"names":["wins","App","useState","list","setList","isWating","setIsWating","spinner","setSpiner","Audio","sound","audio","history","useHistory","useEffect","length","localStorage","setItem","JSON","stringify","stoaredList","parse","getItem","Board","tempList","row","i","push","className","includes","style","backgroundColor","fontSize","color","fontWeight","margin","width","borderLeft","borderRight","height","border","Button","variant","onClick","removeItem","size","background","intervalId","setInterval","number","Math","floor","random","flag","play","setTimeout","clearInterval","remove","disabled","Spinner","animation","class","map","label","FormCheck","textAlign","borderColor","React","memo","constSets","colors","Ticket","player","setPlayers","sets","setSets","tempCard","temp","card","index","id","marginLeft","padding","_entries","col","display","justifyContent","alignItems","html2canvas","document","getElementById","indexOf","then","canvas","dataURL","toDataURL","link","createElement","download","href","click","capture","Card","ticket","placeholder","onChange","e","target","value","type","set","tickets","tamblo","generateTickets","parseInt","overflow","path","component","Main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.60803bcf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spin.16183bed.mp3\";","import React, { useEffect, useState } from \"react\";\nimport { Button, Spinner, FormCheck } from \"react-bootstrap\";\nimport { useHistory } from 'react-router-dom';\nimport sound from \"../assets/spin.mp3\"\nconst wins = [\n  \"Early 5\",\n  \"Top Line\",\n  \"Middle Line\",\n  \"Bottom Line\",\n  \"Four Corners\",\n  \"Full House 1\",\n  \" Full House 2\"\n]\nfunction App() {\n  const [list, setList] = useState([]);\n  const [isWating, setIsWating] = useState(false);\n  const [spinner, setSpiner] = useState(1);\n  const [audio, setAudio] = useState(new Audio(sound));\n  const history = useHistory();\n\n  useEffect(() => {\n    if (list.length) localStorage.setItem(\"numbers\", JSON.stringify(list))\n  }, [list])\n\n  useEffect(() => {\n    let stoaredList = JSON.parse(localStorage.getItem(\"numbers\"))\n    if (stoaredList) setList(stoaredList)\n  }, [])\n\n  const handleOnReset = () => {\n    setList([])\n    localStorage.removeItem(\"numbers\")\n  }\n\n  const handleOnClick = () => {\n    if (list.length < 90) {\n      let intervalId = setInterval(() => {\n        let number = Math.floor(Math.random() * (91 - 1) + 1)\n        setSpiner(number)\n      }, 50)\n      let flag = true;\n      while (flag) {\n        let number = Math.floor(Math.random() * (91 - 1) + 1)\n        // let mylist = [6, 27, 15, 31, 67, 48, 75, 56, 70]\n        if (!list.includes(number)) {\n          // if (list.length < 9 ? mylist.includes(number) : true) {\n            setIsWating(true)\n            audio.play()\n            flag = false\n            setTimeout(() => {\n              clearInterval(intervalId)\n              setList([...list, number])\n              setIsWating(false)\n              audio.remove()\n            }, 3600)\n          // }\n        }\n      }\n    }\n  }\n\n  const Board = () => {\n    let tempList = []\n    let row = []\n    for (let i = 1; i <= 90; i++) {\n\n      row.push(<div\n        className={`col  ${list.includes(i) ? \"border-danger\" : \"\"} rounded-pill mx-2 my-2`}\n        style={{ backgroundColor: list.includes(i) ? \"#d5e4f3\" : \"\" }}>\n        <span style={{ fontSize: \"25px\", color: !list.includes(i) ? \"#6c757d\" : \"\", fontWeight: !list.includes(i) ? \"100\" : \"bold\" }}><b>{i}</b></span>\n      </div>)\n\n      if (i % 10 === 0) {\n        tempList.push(<div className=\"row\" style={{ margin: \"0px\", width: \"90px\", borderLeft: \"1px solid #fff\", borderRight: \"1px solid\" }}>{row}</div>)\n        row = []\n      }\n    }\n    return tempList;\n  }\n\n  return (\n    <div className=\"row\" style={{ height: \"100vh\", border: \"2px solid\" }}>\n      <div className=\"col-3 d-flex align-items-center flex-column pt-3\" style={{ backgroundColor: \"#adb5bd\" }}>\n        <div className=\"d-flex justify-content-center\">\n          <Button variant=\"info\" onClick={handleOnReset} size=\"sm\">\n            Reset\n          </Button>\n          <Button className=\"ml-3\" variant=\"secondary\" onClick={() => history.push(\"/promobi-housie/tickets\")} size=\"sm\">\n            generate tickets\n          </Button>\n        </div>\n        <div style={{ fontSize: \"20px\" }} className=\"pt-2\">Previous</div>\n        <div style={{ width: \"100px\", height: \"100px\" }} className=\"d-flex align-items-center justify-content-center border border-secondary rounded-circle mb-1\" >\n          {list.length !== 0 &&\n            <span style={{ fontSize: \"60px\", color: \"grey\" }}>\n              {list[list.length - 2]}\n            </span>\n          }\n        </div>\n        <div style={{ width: \"200px\", height: \"200px\", background: \"#d5e4f3\" }} className=\"d-flex align-items-center justify-content-center border border-dark rounded-circle\" >\n          {isWating ?\n            <span style={{ fontSize: \"135px\", color: \"grey\" }}>\n              {spinner}\n            </span> :\n            list.length ?\n              <span style={{ fontSize: list.length != 0 ? \"135px\" : \"50px\", fontWeight: \"bold\" }}>\n                {list[list.length - 1]}\n              </span> :\n              <h2>Start With Spin &#x21e9;</h2>\n          }\n        </div>\n        <Button className=\"mt-3\" onClick={handleOnClick} disabled={isWating}>\n          {isWating ?\n            <Spinner animation=\"border\" variant=\"info\" /> :\n            <>Spin &#x27F3;</>\n          }\n        </Button>\n        <div class=\"d-flex flex-wrap mt-2 mx-4\">\n          {wins.map(label => <FormCheck style={{ width: \"120px\", textAlign: \"left\" }} className=\"p-2\" label={label} />)}\n        </div>\n      </div>\n      <div className=\"col pt-2\" style={{ height: \"100%\", backgroundColor: \"#adb5bd\", borderLeft: \"1px solid\" }}>\n        <div>\n          <h1><b>Good Luck...!</b></h1>\n          <div class=\"d-flex mx-5 mb-5 bg-dark w-75\" style={{ borderColor: \"#adb5bd\", border: \"5px solid #d5e4f3\" }}>\n            <Board />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Spinner, Container, FormControl, FormCheck } from \"react-bootstrap\";\nimport tamblo from \"tambola-generator\"\nimport html2canvas from 'html2canvas'\nimport { useHistory } from 'react-router-dom';\n\nconst constSets = [1, 2, 3, 4, 5, 6];\nconst colors = [\"red\", \"green\", \"blue\", \"purple\", \"orange\", \"yellow\"]\nfunction Ticket() {\n    const [list, setList] = useState([]);\n    const [player, setPlayers] = useState(0);\n    const [sets, setSets] = useState(1);\n    const history = useHistory()\n    const handelSubmit = () => {\n        let tickets = tamblo.generateTickets(parseInt(player * sets))\n        setList(tickets)\n    }\n\n    const capture = (color, index) => {\n        debugger\n        html2canvas(document.getElementById(`${index+(colors.indexOf(color)*player)}`)).then(canvas => {\n            let dataURL = canvas.toDataURL('image/png');\n            var link = document.createElement('a');\n            link.download = `${color + \"_\" + index}.png`;\n            link.href = dataURL;\n            link.click();\n        });\n    }\n\n    //const Temp = \n    const Card = () => {\n        let temp = 0;\n        const func = (card, index) => {\n            if (index % player == 0) temp += 1\n            let i = index + 1 > player ? (index + 1) - player * (temp - 1) : index + 1\n            let color = colors[temp - 1]\n            return <div className=\"mb-4\">\n                <div id={index+1} style={{ marginLeft: \"20px\", padding: \"30px\", background: \"#fff\" }} className=\"border border-success\" >\n                    <span>{color}</span>\n                    {card._entries.map(row =>\n                        <div class=\"row \">\n                            {row.map(col => <div class=\"col border border-dark\" style={{ width: \"40px\", height: \"40px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", fontSize: \"20px\", background: col ? \"#fff\" : colors[temp - 1] }}>{col || \" \"}</div>)}\n                        </div>)\n                    }\n                    <span> ticket : {i}</span>\n                </div>\n                <Button onClick={() => capture(color, i)} className=\"mt-1\" variant=\"dark\">save</Button>\n            </div>\n        }\n        return func;\n    }\n\n    const tempCard = Card();\n\n    return (\n        <>\n            {!list.length ?\n                <div className=\"row\" style={{ height: \"100vh\", background: \"#cccbab\", width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <div>\n                        <Button onClick={() => history.push(\"/promobi-housie\")} size=\"sm\" variant=\"success\" className=\"mb-2\">Home</Button>\n                        <div>\n                            <input style={{ padding: \"10px\" }} placeholder=\"enter number of players\" onChange={(e) => setPlayers(e.target.value)} type=\"number\" />\n                        </div>\n                        <div className=\"mt-2\">\n                            <label className=\"mr-3\">select number of sets : </label>\n                            <select onChange={(e) => setSets(e.target.value)} className=\"px-2 py-1\">\n                                {constSets.map(set => <option value={set} >{set}</option>)}\n                            </select>\n                        </div>\n                        <div className=\"mt-5\">\n                            <Button onClick={handelSubmit} variant=\"success\">Generate Tickets</Button>\n                        </div>\n                    </div>\n                </div> :\n                <div style={{ background: \"#cccbab\" }}>\n                    <Button onClick={() => history.push(\"/promobi-housie\")} size=\"sm\" variant=\"success\" className=\"mb-2\">Home</Button>\n                    <div className=\"row\" >\n                        {list.map((ticket, index) => tempCard(ticket, index))}\n                    </div>\n                </div>\n\n            }\n        </>\n    );\n}\n\nexport default React.memo(Ticket);\n","import './App.css';\nimport React from \"react\";\nimport Main from \"./components/main\";\nimport Ticket from \"./components/ticket\";\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ overflow: \"hidden\" }}>\n      <Switch>\n        <Route path='/promobi-housie/tickets' component={Ticket} />\n        <Route path='/' component={Main} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter} from 'react-router-dom';\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}